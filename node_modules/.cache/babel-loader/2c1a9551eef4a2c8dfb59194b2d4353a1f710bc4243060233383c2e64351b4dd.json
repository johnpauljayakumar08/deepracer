{"ast":null,"code":"var _jsxFileName = \"E:\\\\deepracer\\\\src\\\\leaderboard.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from 'react';\n// import './App.css'\n// function LeaderboardPage() {\n//   const [leaderboardData, setLeaderboardData] = useState([]);\n\n//   useEffect(() => {\n//     const fetchData = () => {\n//       const storedData = JSON.parse(localStorage.getItem('data')) || [];\n//       // Sort data by timing in ascending order\n//       storedData.sort((a, b) => a.timing - b.timing);\n//       setLeaderboardData(storedData);\n//     };\n\n//     // Fetch data every 2 seconds to simulate live updates\n//     const intervalId = setInterval(fetchData, 2000);\n//     return () => clearInterval(intervalId); // Cleanup interval on unmount\n//   }, []);\n\n//   return (\n//     <div>\n//       <h2>Live Leaderboard</h2>\n//       <table>\n//         <thead>\n//           <tr>\n//             <th>Team Name</th>\n//             <th>Missing Laps</th>\n//             <th>Timing</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {leaderboardData.map((entry, index) => (\n//             <tr key={index}>\n//               <td>{entry.teamName}</td>\n//               <td>{entry.missingLaps}</td>\n//               <td>{entry.timing}</td>\n//             </tr>\n//           ))}\n//         </tbody>\n//       </table>\n//     </div>\n//   );\n// }\n\n// export default LeaderboardPage;\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Leaderboard() {\n  _s();\n  const [teams, setTeams] = useState([]);\n  const [teamName, setTeamName] = useState(\"\");\n  const [timing, setTiming] = useState(\"\");\n  const [missingLaps, setMissingLaps] = useState(\"\");\n  const addTeam = () => {\n    const newTeam = {\n      teamName,\n      timing: parseFloat(timing),\n      missingLaps\n    };\n    setTeams([...teams, newTeam]);\n    setTeamName(\"\");\n    setTiming(\"\");\n    setMissingLaps(\"\");\n  };\n  const sortedTeams = teams.sort((a, b) => a.timing - b.timing);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Event Leaderboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Team Name\",\n        value: teamName,\n        onChange: e => setTeamName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Timing\",\n        value: timing,\n        onChange: e => setTiming(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Missing Laps\",\n        value: missingLaps,\n        onChange: e => setMissingLaps(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addTeam,\n        children: \"Add Team\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      border: \"1\",\n      style: {\n        marginTop: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Team Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Timing\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Missing Laps\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: sortedTeams.map((team, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: team.teamName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: team.timing\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: team.missingLaps\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n_s(Leaderboard, \"Fos+f1d45hzOeV71FZgGLj3M+14=\");\n_c = Leaderboard;\nexport default Leaderboard;\nvar _c;\n$RefreshReg$(_c, \"Leaderboard\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Leaderboard","_s","teams","setTeams","teamName","setTeamName","timing","setTiming","missingLaps","setMissingLaps","addTeam","newTeam","parseFloat","sortedTeams","sort","a","b","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","border","style","marginTop","map","team","index","_c","$RefreshReg$"],"sources":["E:/deepracer/src/leaderboard.js"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\r\n// import './App.css'\r\n// function LeaderboardPage() {\r\n//   const [leaderboardData, setLeaderboardData] = useState([]);\r\n\r\n//   useEffect(() => {\r\n//     const fetchData = () => {\r\n//       const storedData = JSON.parse(localStorage.getItem('data')) || [];\r\n//       // Sort data by timing in ascending order\r\n//       storedData.sort((a, b) => a.timing - b.timing);\r\n//       setLeaderboardData(storedData);\r\n//     };\r\n\r\n//     // Fetch data every 2 seconds to simulate live updates\r\n//     const intervalId = setInterval(fetchData, 2000);\r\n//     return () => clearInterval(intervalId); // Cleanup interval on unmount\r\n//   }, []);\r\n\r\n//   return (\r\n//     <div>\r\n//       <h2>Live Leaderboard</h2>\r\n//       <table>\r\n//         <thead>\r\n//           <tr>\r\n//             <th>Team Name</th>\r\n//             <th>Missing Laps</th>\r\n//             <th>Timing</th>\r\n//           </tr>\r\n//         </thead>\r\n//         <tbody>\r\n//           {leaderboardData.map((entry, index) => (\r\n//             <tr key={index}>\r\n//               <td>{entry.teamName}</td>\r\n//               <td>{entry.missingLaps}</td>\r\n//               <td>{entry.timing}</td>\r\n//             </tr>\r\n//           ))}\r\n//         </tbody>\r\n//       </table>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default LeaderboardPage;\r\nimport React, { useState } from \"react\";\r\n\r\nfunction Leaderboard() {\r\n  const [teams, setTeams] = useState([]);\r\n  const [teamName, setTeamName] = useState(\"\");\r\n  const [timing, setTiming] = useState(\"\");\r\n  const [missingLaps, setMissingLaps] = useState(\"\");\r\n\r\n  const addTeam = () => {\r\n    const newTeam = { teamName, timing: parseFloat(timing), missingLaps };\r\n    setTeams([...teams, newTeam]);\r\n    setTeamName(\"\");\r\n    setTiming(\"\");\r\n    setMissingLaps(\"\");\r\n  };\r\n\r\n  const sortedTeams = teams.sort((a, b) => a.timing - b.timing);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Event Leaderboard</h2>\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Team Name\"\r\n          value={teamName}\r\n          onChange={(e) => setTeamName(e.target.value)}\r\n        />\r\n        <input\r\n          type=\"number\"\r\n          placeholder=\"Timing\"\r\n          value={timing}\r\n          onChange={(e) => setTiming(e.target.value)}\r\n        />\r\n        <input\r\n          type=\"number\"\r\n          placeholder=\"Missing Laps\"\r\n          value={missingLaps}\r\n          onChange={(e) => setMissingLaps(e.target.value)}\r\n        />\r\n        <button onClick={addTeam}>Add Team</button>\r\n      </div>\r\n\r\n      <table border=\"1\" style={{ marginTop: \"20px\" }}>\r\n        <thead>\r\n          <tr>\r\n            <th>Team Name</th>\r\n            <th>Timing</th>\r\n            <th>Missing Laps</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {sortedTeams.map((team, index) => (\r\n            <tr key={index}>\r\n              <td>{team.teamName}</td>\r\n              <td>{team.timing}</td>\r\n              <td>{team.missingLaps}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Leaderboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}